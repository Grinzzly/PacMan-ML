{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-converter/package.json","includedInParent":true,"mtime":1528724212618},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-converter/.babelrc","includedInParent":true,"mtime":1528724212614},{"name":"protobufjs/minimal","loc":{"line":2,"column":27}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = exports.tensorflow = undefined;\n\nvar _minimal = require(\"protobufjs/minimal\");\n\nvar $protobuf = _interopRequireWildcard(_minimal);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nconst $Reader = $protobuf.Reader,\n      $util = $protobuf.util; /*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\n\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nconst tensorflow = exports.tensorflow = $root.tensorflow = (() => {\n\n    const tensorflow = {};\n\n    tensorflow.Any = function () {\n\n        function Any(p) {\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        Any.prototype.typeUrl = \"\";\n        Any.prototype.value = $util.newBuffer([]);\n\n        Any.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.Any();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.typeUrl = r.string();\n                        break;\n                    case 2:\n                        m.value = r.bytes();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return Any;\n    }();\n\n    tensorflow.DataType = function () {\n        const valuesById = {},\n              values = Object.create(valuesById);\n        values[valuesById[0] = \"DT_INVALID\"] = 0;\n        values[valuesById[1] = \"DT_FLOAT\"] = 1;\n        values[valuesById[2] = \"DT_DOUBLE\"] = 2;\n        values[valuesById[3] = \"DT_INT32\"] = 3;\n        values[valuesById[4] = \"DT_UINT8\"] = 4;\n        values[valuesById[5] = \"DT_INT16\"] = 5;\n        values[valuesById[6] = \"DT_INT8\"] = 6;\n        values[valuesById[7] = \"DT_STRING\"] = 7;\n        values[valuesById[8] = \"DT_COMPLEX64\"] = 8;\n        values[valuesById[9] = \"DT_INT64\"] = 9;\n        values[valuesById[10] = \"DT_BOOL\"] = 10;\n        values[valuesById[11] = \"DT_QINT8\"] = 11;\n        values[valuesById[12] = \"DT_QUINT8\"] = 12;\n        values[valuesById[13] = \"DT_QINT32\"] = 13;\n        values[valuesById[14] = \"DT_BFLOAT16\"] = 14;\n        values[valuesById[101] = \"DT_FLOAT_REF\"] = 101;\n        values[valuesById[102] = \"DT_DOUBLE_REF\"] = 102;\n        values[valuesById[103] = \"DT_INT32_REF\"] = 103;\n        values[valuesById[104] = \"DT_UINT8_REF\"] = 104;\n        values[valuesById[105] = \"DT_INT16_REF\"] = 105;\n        values[valuesById[106] = \"DT_INT8_REF\"] = 106;\n        values[valuesById[107] = \"DT_STRING_REF\"] = 107;\n        values[valuesById[108] = \"DT_COMPLEX64_REF\"] = 108;\n        values[valuesById[109] = \"DT_INT64_REF\"] = 109;\n        values[valuesById[110] = \"DT_BOOL_REF\"] = 110;\n        values[valuesById[111] = \"DT_QINT8_REF\"] = 111;\n        values[valuesById[112] = \"DT_QUINT8_REF\"] = 112;\n        values[valuesById[113] = \"DT_QINT32_REF\"] = 113;\n        values[valuesById[114] = \"DT_BFLOAT16_REF\"] = 114;\n        return values;\n    }();\n\n    tensorflow.TensorShape = function () {\n\n        function TensorShape(p) {\n            this.dim = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        TensorShape.prototype.dim = $util.emptyArray;\n        TensorShape.prototype.unknownRank = false;\n\n        TensorShape.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.TensorShape();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 2:\n                        if (!(m.dim && m.dim.length)) m.dim = [];\n                        m.dim.push($root.tensorflow.TensorShape.Dim.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        m.unknownRank = r.bool();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        TensorShape.Dim = function () {\n\n            function Dim(p) {\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            Dim.prototype.size = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n            Dim.prototype.name = \"\";\n\n            Dim.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.TensorShape.Dim();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.size = r.int64();\n                            break;\n                        case 2:\n                            m.name = r.string();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return Dim;\n        }();\n\n        return TensorShape;\n    }();\n\n    tensorflow.Tensor = function () {\n\n        function Tensor(p) {\n            this.floatVal = [];\n            this.doubleVal = [];\n            this.intVal = [];\n            this.stringVal = [];\n            this.scomplexVal = [];\n            this.int64Val = [];\n            this.boolVal = [];\n            this.uint32Val = [];\n            this.uint64Val = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        Tensor.prototype.dtype = 0;\n        Tensor.prototype.tensorShape = null;\n        Tensor.prototype.versionNumber = 0;\n        Tensor.prototype.tensorContent = $util.newBuffer([]);\n        Tensor.prototype.floatVal = $util.emptyArray;\n        Tensor.prototype.doubleVal = $util.emptyArray;\n        Tensor.prototype.intVal = $util.emptyArray;\n        Tensor.prototype.stringVal = $util.emptyArray;\n        Tensor.prototype.scomplexVal = $util.emptyArray;\n        Tensor.prototype.int64Val = $util.emptyArray;\n        Tensor.prototype.boolVal = $util.emptyArray;\n        Tensor.prototype.uint32Val = $util.emptyArray;\n        Tensor.prototype.uint64Val = $util.emptyArray;\n\n        Tensor.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.Tensor();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.dtype = r.int32();\n                        break;\n                    case 2:\n                        m.tensorShape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                        break;\n                    case 3:\n                        m.versionNumber = r.int32();\n                        break;\n                    case 4:\n                        m.tensorContent = r.bytes();\n                        break;\n                    case 5:\n                        if (!(m.floatVal && m.floatVal.length)) m.floatVal = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.floatVal.push(r.float());\n                        } else m.floatVal.push(r.float());\n                        break;\n                    case 6:\n                        if (!(m.doubleVal && m.doubleVal.length)) m.doubleVal = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.doubleVal.push(r.double());\n                        } else m.doubleVal.push(r.double());\n                        break;\n                    case 7:\n                        if (!(m.intVal && m.intVal.length)) m.intVal = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.intVal.push(r.int32());\n                        } else m.intVal.push(r.int32());\n                        break;\n                    case 8:\n                        if (!(m.stringVal && m.stringVal.length)) m.stringVal = [];\n                        m.stringVal.push(r.bytes());\n                        break;\n                    case 9:\n                        if (!(m.scomplexVal && m.scomplexVal.length)) m.scomplexVal = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.scomplexVal.push(r.float());\n                        } else m.scomplexVal.push(r.float());\n                        break;\n                    case 10:\n                        if (!(m.int64Val && m.int64Val.length)) m.int64Val = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.int64Val.push(r.int64());\n                        } else m.int64Val.push(r.int64());\n                        break;\n                    case 11:\n                        if (!(m.boolVal && m.boolVal.length)) m.boolVal = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.boolVal.push(r.bool());\n                        } else m.boolVal.push(r.bool());\n                        break;\n                    case 16:\n                        if (!(m.uint32Val && m.uint32Val.length)) m.uint32Val = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.uint32Val.push(r.uint32());\n                        } else m.uint32Val.push(r.uint32());\n                        break;\n                    case 17:\n                        if (!(m.uint64Val && m.uint64Val.length)) m.uint64Val = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.uint64Val.push(r.uint64());\n                        } else m.uint64Val.push(r.uint64());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return Tensor;\n    }();\n\n    tensorflow.AttrValue = function () {\n\n        function AttrValue(p) {\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        AttrValue.prototype.list = null;\n        AttrValue.prototype.s = $util.newBuffer([]);\n        AttrValue.prototype.i = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        AttrValue.prototype.f = 0;\n        AttrValue.prototype.b = false;\n        AttrValue.prototype.type = 0;\n        AttrValue.prototype.shape = null;\n        AttrValue.prototype.tensor = null;\n        AttrValue.prototype.placeholder = \"\";\n        AttrValue.prototype.func = null;\n\n        let $oneOfFields;\n\n        Object.defineProperty(AttrValue.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"list\", \"s\", \"i\", \"f\", \"b\", \"type\", \"shape\", \"tensor\", \"placeholder\", \"func\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        AttrValue.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.AttrValue();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.list = $root.tensorflow.AttrValue.ListValue.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        m.s = r.bytes();\n                        break;\n                    case 3:\n                        m.i = r.int64();\n                        break;\n                    case 4:\n                        m.f = r.float();\n                        break;\n                    case 5:\n                        m.b = r.bool();\n                        break;\n                    case 6:\n                        m.type = r.int32();\n                        break;\n                    case 7:\n                        m.shape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                        break;\n                    case 8:\n                        m.tensor = $root.tensorflow.Tensor.decode(r, r.uint32());\n                        break;\n                    case 9:\n                        m.placeholder = r.string();\n                        break;\n                    case 10:\n                        m.func = $root.tensorflow.NameAttrList.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        AttrValue.ListValue = function () {\n\n            function ListValue(p) {\n                this.s = [];\n                this.i = [];\n                this.f = [];\n                this.b = [];\n                this.type = [];\n                this.shape = [];\n                this.tensor = [];\n                this.func = [];\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            ListValue.prototype.s = $util.emptyArray;\n            ListValue.prototype.i = $util.emptyArray;\n            ListValue.prototype.f = $util.emptyArray;\n            ListValue.prototype.b = $util.emptyArray;\n            ListValue.prototype.type = $util.emptyArray;\n            ListValue.prototype.shape = $util.emptyArray;\n            ListValue.prototype.tensor = $util.emptyArray;\n            ListValue.prototype.func = $util.emptyArray;\n\n            ListValue.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.AttrValue.ListValue();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 2:\n                            if (!(m.s && m.s.length)) m.s = [];\n                            m.s.push(r.bytes());\n                            break;\n                        case 3:\n                            if (!(m.i && m.i.length)) m.i = [];\n                            if ((t & 7) === 2) {\n                                var c2 = r.uint32() + r.pos;\n                                while (r.pos < c2) m.i.push(r.int64());\n                            } else m.i.push(r.int64());\n                            break;\n                        case 4:\n                            if (!(m.f && m.f.length)) m.f = [];\n                            if ((t & 7) === 2) {\n                                var c2 = r.uint32() + r.pos;\n                                while (r.pos < c2) m.f.push(r.float());\n                            } else m.f.push(r.float());\n                            break;\n                        case 5:\n                            if (!(m.b && m.b.length)) m.b = [];\n                            if ((t & 7) === 2) {\n                                var c2 = r.uint32() + r.pos;\n                                while (r.pos < c2) m.b.push(r.bool());\n                            } else m.b.push(r.bool());\n                            break;\n                        case 6:\n                            if (!(m.type && m.type.length)) m.type = [];\n                            if ((t & 7) === 2) {\n                                var c2 = r.uint32() + r.pos;\n                                while (r.pos < c2) m.type.push(r.int32());\n                            } else m.type.push(r.int32());\n                            break;\n                        case 7:\n                            if (!(m.shape && m.shape.length)) m.shape = [];\n                            m.shape.push($root.tensorflow.TensorShape.decode(r, r.uint32()));\n                            break;\n                        case 8:\n                            if (!(m.tensor && m.tensor.length)) m.tensor = [];\n                            m.tensor.push($root.tensorflow.Tensor.decode(r, r.uint32()));\n                            break;\n                        case 9:\n                            if (!(m.func && m.func.length)) m.func = [];\n                            m.func.push($root.tensorflow.NameAttrList.decode(r, r.uint32()));\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return ListValue;\n        }();\n\n        return AttrValue;\n    }();\n\n    tensorflow.NameAttrList = function () {\n\n        function NameAttrList(p) {\n            this.attr = {};\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        NameAttrList.prototype.name = \"\";\n        NameAttrList.prototype.attr = $util.emptyObject;\n\n        NameAttrList.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.NameAttrList(),\n                k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 2:\n                        r.skip().pos++;\n                        if (m.attr === $util.emptyObject) m.attr = {};\n                        k = r.string();\n                        r.pos++;\n                        m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return NameAttrList;\n    }();\n\n    tensorflow.NodeDef = function () {\n\n        function NodeDef(p) {\n            this.input = [];\n            this.attr = {};\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        NodeDef.prototype.name = \"\";\n        NodeDef.prototype.op = \"\";\n        NodeDef.prototype.input = $util.emptyArray;\n        NodeDef.prototype.device = \"\";\n        NodeDef.prototype.attr = $util.emptyObject;\n\n        NodeDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.NodeDef(),\n                k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 2:\n                        m.op = r.string();\n                        break;\n                    case 3:\n                        if (!(m.input && m.input.length)) m.input = [];\n                        m.input.push(r.string());\n                        break;\n                    case 4:\n                        m.device = r.string();\n                        break;\n                    case 5:\n                        r.skip().pos++;\n                        if (m.attr === $util.emptyObject) m.attr = {};\n                        k = r.string();\n                        r.pos++;\n                        m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return NodeDef;\n    }();\n\n    tensorflow.VersionDef = function () {\n\n        function VersionDef(p) {\n            this.badConsumers = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        VersionDef.prototype.producer = 0;\n        VersionDef.prototype.minConsumer = 0;\n        VersionDef.prototype.badConsumers = $util.emptyArray;\n\n        VersionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.VersionDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.producer = r.int32();\n                        break;\n                    case 2:\n                        m.minConsumer = r.int32();\n                        break;\n                    case 3:\n                        if (!(m.badConsumers && m.badConsumers.length)) m.badConsumers = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2) m.badConsumers.push(r.int32());\n                        } else m.badConsumers.push(r.int32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return VersionDef;\n    }();\n\n    tensorflow.GraphDef = function () {\n\n        function GraphDef(p) {\n            this.node = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        GraphDef.prototype.node = $util.emptyArray;\n        GraphDef.prototype.versions = null;\n        GraphDef.prototype.library = null;\n\n        GraphDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.GraphDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        if (!(m.node && m.node.length)) m.node = [];\n                        m.node.push($root.tensorflow.NodeDef.decode(r, r.uint32()));\n                        break;\n                    case 4:\n                        m.versions = $root.tensorflow.VersionDef.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        m.library = $root.tensorflow.FunctionDefLibrary.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return GraphDef;\n    }();\n\n    tensorflow.CollectionDef = function () {\n\n        function CollectionDef(p) {\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        CollectionDef.prototype.nodeList = null;\n        CollectionDef.prototype.bytesList = null;\n        CollectionDef.prototype.int64List = null;\n        CollectionDef.prototype.floatList = null;\n        CollectionDef.prototype.anyList = null;\n\n        let $oneOfFields;\n\n        Object.defineProperty(CollectionDef.prototype, \"kind\", {\n            get: $util.oneOfGetter($oneOfFields = [\"nodeList\", \"bytesList\", \"int64List\", \"floatList\", \"anyList\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        CollectionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.CollectionDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.nodeList = $root.tensorflow.CollectionDef.NodeList.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        m.bytesList = $root.tensorflow.CollectionDef.BytesList.decode(r, r.uint32());\n                        break;\n                    case 3:\n                        m.int64List = $root.tensorflow.CollectionDef.Int64List.decode(r, r.uint32());\n                        break;\n                    case 4:\n                        m.floatList = $root.tensorflow.CollectionDef.FloatList.decode(r, r.uint32());\n                        break;\n                    case 5:\n                        m.anyList = $root.tensorflow.CollectionDef.AnyList.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        CollectionDef.NodeList = function () {\n\n            function NodeList(p) {\n                this.value = [];\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            NodeList.prototype.value = $util.emptyArray;\n\n            NodeList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.CollectionDef.NodeList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            if (!(m.value && m.value.length)) m.value = [];\n                            m.value.push(r.string());\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return NodeList;\n        }();\n\n        CollectionDef.BytesList = function () {\n\n            function BytesList(p) {\n                this.value = [];\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            BytesList.prototype.value = $util.emptyArray;\n\n            BytesList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.CollectionDef.BytesList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            if (!(m.value && m.value.length)) m.value = [];\n                            m.value.push(r.bytes());\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return BytesList;\n        }();\n\n        CollectionDef.Int64List = function () {\n\n            function Int64List(p) {\n                this.value = [];\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            Int64List.prototype.value = $util.emptyArray;\n\n            Int64List.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.CollectionDef.Int64List();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            if (!(m.value && m.value.length)) m.value = [];\n                            if ((t & 7) === 2) {\n                                var c2 = r.uint32() + r.pos;\n                                while (r.pos < c2) m.value.push(r.int64());\n                            } else m.value.push(r.int64());\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return Int64List;\n        }();\n\n        CollectionDef.FloatList = function () {\n\n            function FloatList(p) {\n                this.value = [];\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            FloatList.prototype.value = $util.emptyArray;\n\n            FloatList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.CollectionDef.FloatList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            if (!(m.value && m.value.length)) m.value = [];\n                            if ((t & 7) === 2) {\n                                var c2 = r.uint32() + r.pos;\n                                while (r.pos < c2) m.value.push(r.float());\n                            } else m.value.push(r.float());\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return FloatList;\n        }();\n\n        CollectionDef.AnyList = function () {\n\n            function AnyList(p) {\n                this.value = [];\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            AnyList.prototype.value = $util.emptyArray;\n\n            AnyList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.CollectionDef.AnyList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            if (!(m.value && m.value.length)) m.value = [];\n                            m.value.push($root.tensorflow.Any.decode(r, r.uint32()));\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return AnyList;\n        }();\n\n        return CollectionDef;\n    }();\n\n    tensorflow.SaverDef = function () {\n\n        function SaverDef(p) {\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        SaverDef.prototype.filenameTensorName = \"\";\n        SaverDef.prototype.saveTensorName = \"\";\n        SaverDef.prototype.restoreOpName = \"\";\n        SaverDef.prototype.maxToKeep = 0;\n        SaverDef.prototype.sharded = false;\n        SaverDef.prototype.keepCheckpointEveryNHours = 0;\n        SaverDef.prototype.version = 0;\n\n        SaverDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.SaverDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.filenameTensorName = r.string();\n                        break;\n                    case 2:\n                        m.saveTensorName = r.string();\n                        break;\n                    case 3:\n                        m.restoreOpName = r.string();\n                        break;\n                    case 4:\n                        m.maxToKeep = r.int32();\n                        break;\n                    case 5:\n                        m.sharded = r.bool();\n                        break;\n                    case 6:\n                        m.keepCheckpointEveryNHours = r.float();\n                        break;\n                    case 7:\n                        m.version = r.int32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        SaverDef.CheckpointFormatVersion = function () {\n            const valuesById = {},\n                  values = Object.create(valuesById);\n            values[valuesById[0] = \"LEGACY\"] = 0;\n            values[valuesById[1] = \"V1\"] = 1;\n            values[valuesById[2] = \"V2\"] = 2;\n            return values;\n        }();\n\n        return SaverDef;\n    }();\n\n    tensorflow.TensorInfo = function () {\n\n        function TensorInfo(p) {\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        TensorInfo.prototype.name = \"\";\n        TensorInfo.prototype.cooSparse = null;\n        TensorInfo.prototype.dtype = 0;\n        TensorInfo.prototype.tensorShape = null;\n\n        let $oneOfFields;\n\n        Object.defineProperty(TensorInfo.prototype, \"encoding\", {\n            get: $util.oneOfGetter($oneOfFields = [\"name\", \"cooSparse\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        TensorInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.TensorInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 4:\n                        m.cooSparse = $root.tensorflow.TensorInfo.CooSparse.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        m.dtype = r.int32();\n                        break;\n                    case 3:\n                        m.tensorShape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        TensorInfo.CooSparse = function () {\n\n            function CooSparse(p) {\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            CooSparse.prototype.valuesTensorName = \"\";\n            CooSparse.prototype.indicesTensorName = \"\";\n            CooSparse.prototype.denseShapeTensorName = \"\";\n\n            CooSparse.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.TensorInfo.CooSparse();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.valuesTensorName = r.string();\n                            break;\n                        case 2:\n                            m.indicesTensorName = r.string();\n                            break;\n                        case 3:\n                            m.denseShapeTensorName = r.string();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return CooSparse;\n        }();\n\n        return TensorInfo;\n    }();\n\n    tensorflow.SignatureDef = function () {\n\n        function SignatureDef(p) {\n            this.inputs = {};\n            this.outputs = {};\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        SignatureDef.prototype.inputs = $util.emptyObject;\n        SignatureDef.prototype.outputs = $util.emptyObject;\n        SignatureDef.prototype.methodName = \"\";\n\n        SignatureDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.SignatureDef(),\n                k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        r.skip().pos++;\n                        if (m.inputs === $util.emptyObject) m.inputs = {};\n                        k = r.string();\n                        r.pos++;\n                        m.inputs[k] = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        r.skip().pos++;\n                        if (m.outputs === $util.emptyObject) m.outputs = {};\n                        k = r.string();\n                        r.pos++;\n                        m.outputs[k] = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                        break;\n                    case 3:\n                        m.methodName = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return SignatureDef;\n    }();\n\n    tensorflow.AssetFileDef = function () {\n\n        function AssetFileDef(p) {\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        AssetFileDef.prototype.tensorInfo = null;\n        AssetFileDef.prototype.filename = \"\";\n\n        AssetFileDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.AssetFileDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.tensorInfo = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        m.filename = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return AssetFileDef;\n    }();\n\n    tensorflow.OpDef = function () {\n\n        function OpDef(p) {\n            this.inputArg = [];\n            this.outputArg = [];\n            this.attr = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        OpDef.prototype.name = \"\";\n        OpDef.prototype.inputArg = $util.emptyArray;\n        OpDef.prototype.outputArg = $util.emptyArray;\n        OpDef.prototype.attr = $util.emptyArray;\n        OpDef.prototype.deprecation = null;\n        OpDef.prototype.summary = \"\";\n        OpDef.prototype.description = \"\";\n        OpDef.prototype.isCommutative = false;\n        OpDef.prototype.isAggregate = false;\n        OpDef.prototype.isStateful = false;\n        OpDef.prototype.allowsUninitializedInput = false;\n\n        OpDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.OpDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 2:\n                        if (!(m.inputArg && m.inputArg.length)) m.inputArg = [];\n                        m.inputArg.push($root.tensorflow.OpDef.ArgDef.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        if (!(m.outputArg && m.outputArg.length)) m.outputArg = [];\n                        m.outputArg.push($root.tensorflow.OpDef.ArgDef.decode(r, r.uint32()));\n                        break;\n                    case 4:\n                        if (!(m.attr && m.attr.length)) m.attr = [];\n                        m.attr.push($root.tensorflow.OpDef.AttrDef.decode(r, r.uint32()));\n                        break;\n                    case 8:\n                        m.deprecation = $root.tensorflow.OpDef.OpDeprecation.decode(r, r.uint32());\n                        break;\n                    case 5:\n                        m.summary = r.string();\n                        break;\n                    case 6:\n                        m.description = r.string();\n                        break;\n                    case 18:\n                        m.isCommutative = r.bool();\n                        break;\n                    case 16:\n                        m.isAggregate = r.bool();\n                        break;\n                    case 17:\n                        m.isStateful = r.bool();\n                        break;\n                    case 19:\n                        m.allowsUninitializedInput = r.bool();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        OpDef.ArgDef = function () {\n\n            function ArgDef(p) {\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            ArgDef.prototype.name = \"\";\n            ArgDef.prototype.description = \"\";\n            ArgDef.prototype.type = 0;\n            ArgDef.prototype.typeAttr = \"\";\n            ArgDef.prototype.numberAttr = \"\";\n            ArgDef.prototype.typeListAttr = \"\";\n            ArgDef.prototype.isRef = false;\n\n            ArgDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.OpDef.ArgDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.name = r.string();\n                            break;\n                        case 2:\n                            m.description = r.string();\n                            break;\n                        case 3:\n                            m.type = r.int32();\n                            break;\n                        case 4:\n                            m.typeAttr = r.string();\n                            break;\n                        case 5:\n                            m.numberAttr = r.string();\n                            break;\n                        case 6:\n                            m.typeListAttr = r.string();\n                            break;\n                        case 16:\n                            m.isRef = r.bool();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return ArgDef;\n        }();\n\n        OpDef.AttrDef = function () {\n\n            function AttrDef(p) {\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            AttrDef.prototype.name = \"\";\n            AttrDef.prototype.type = \"\";\n            AttrDef.prototype.defaultValue = null;\n            AttrDef.prototype.description = \"\";\n            AttrDef.prototype.hasMinimum = false;\n            AttrDef.prototype.minimum = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n            AttrDef.prototype.allowedValues = null;\n\n            AttrDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.OpDef.AttrDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.name = r.string();\n                            break;\n                        case 2:\n                            m.type = r.string();\n                            break;\n                        case 3:\n                            m.defaultValue = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                            break;\n                        case 4:\n                            m.description = r.string();\n                            break;\n                        case 5:\n                            m.hasMinimum = r.bool();\n                            break;\n                        case 6:\n                            m.minimum = r.int64();\n                            break;\n                        case 7:\n                            m.allowedValues = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return AttrDef;\n        }();\n\n        OpDef.OpDeprecation = function () {\n\n            function OpDeprecation(p) {\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            OpDeprecation.prototype.version = 0;\n            OpDeprecation.prototype.explanation = \"\";\n\n            OpDeprecation.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.OpDef.OpDeprecation();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.version = r.int32();\n                            break;\n                        case 2:\n                            m.explanation = r.string();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return OpDeprecation;\n        }();\n\n        return OpDef;\n    }();\n\n    tensorflow.OpList = function () {\n\n        function OpList(p) {\n            this.op = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        OpList.prototype.op = $util.emptyArray;\n\n        OpList.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.OpList();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        if (!(m.op && m.op.length)) m.op = [];\n                        m.op.push($root.tensorflow.OpDef.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return OpList;\n    }();\n\n    tensorflow.MetaGraphDef = function () {\n\n        function MetaGraphDef(p) {\n            this.collectionDef = {};\n            this.signatureDef = {};\n            this.assetFileDef = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        MetaGraphDef.prototype.metaInfoDef = null;\n        MetaGraphDef.prototype.graphDef = null;\n        MetaGraphDef.prototype.saverDef = null;\n        MetaGraphDef.prototype.collectionDef = $util.emptyObject;\n        MetaGraphDef.prototype.signatureDef = $util.emptyObject;\n        MetaGraphDef.prototype.assetFileDef = $util.emptyArray;\n\n        MetaGraphDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.MetaGraphDef(),\n                k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.metaInfoDef = $root.tensorflow.MetaGraphDef.MetaInfoDef.decode(r, r.uint32());\n                        break;\n                    case 2:\n                        m.graphDef = $root.tensorflow.GraphDef.decode(r, r.uint32());\n                        break;\n                    case 3:\n                        m.saverDef = $root.tensorflow.SaverDef.decode(r, r.uint32());\n                        break;\n                    case 4:\n                        r.skip().pos++;\n                        if (m.collectionDef === $util.emptyObject) m.collectionDef = {};\n                        k = r.string();\n                        r.pos++;\n                        m.collectionDef[k] = $root.tensorflow.CollectionDef.decode(r, r.uint32());\n                        break;\n                    case 5:\n                        r.skip().pos++;\n                        if (m.signatureDef === $util.emptyObject) m.signatureDef = {};\n                        k = r.string();\n                        r.pos++;\n                        m.signatureDef[k] = $root.tensorflow.SignatureDef.decode(r, r.uint32());\n                        break;\n                    case 6:\n                        if (!(m.assetFileDef && m.assetFileDef.length)) m.assetFileDef = [];\n                        m.assetFileDef.push($root.tensorflow.AssetFileDef.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        MetaGraphDef.MetaInfoDef = function () {\n\n            function MetaInfoDef(p) {\n                this.tags = [];\n                if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n            }\n\n            MetaInfoDef.prototype.metaGraphVersion = \"\";\n            MetaInfoDef.prototype.strippedOpList = null;\n            MetaInfoDef.prototype.anyInfo = null;\n            MetaInfoDef.prototype.tags = $util.emptyArray;\n            MetaInfoDef.prototype.tensorflowVersion = \"\";\n            MetaInfoDef.prototype.tensorflowGitVersion = \"\";\n\n            MetaInfoDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader)) r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l,\n                    m = new $root.tensorflow.MetaGraphDef.MetaInfoDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.metaGraphVersion = r.string();\n                            break;\n                        case 2:\n                            m.strippedOpList = $root.tensorflow.OpList.decode(r, r.uint32());\n                            break;\n                        case 3:\n                            m.anyInfo = $root.tensorflow.Any.decode(r, r.uint32());\n                            break;\n                        case 4:\n                            if (!(m.tags && m.tags.length)) m.tags = [];\n                            m.tags.push(r.string());\n                            break;\n                        case 5:\n                            m.tensorflowVersion = r.string();\n                            break;\n                        case 6:\n                            m.tensorflowGitVersion = r.string();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n\n            return MetaInfoDef;\n        }();\n\n        return MetaGraphDef;\n    }();\n\n    tensorflow.SavedModel = function () {\n\n        function SavedModel(p) {\n            this.metaGraphs = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        SavedModel.prototype.savedModelSchemaVersion = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n        SavedModel.prototype.metaGraphs = $util.emptyArray;\n\n        SavedModel.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.SavedModel();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.savedModelSchemaVersion = r.int64();\n                        break;\n                    case 2:\n                        if (!(m.metaGraphs && m.metaGraphs.length)) m.metaGraphs = [];\n                        m.metaGraphs.push($root.tensorflow.MetaGraphDef.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return SavedModel;\n    }();\n\n    tensorflow.FunctionDefLibrary = function () {\n\n        function FunctionDefLibrary(p) {\n            this[\"function\"] = [];\n            this.gradient = [];\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        FunctionDefLibrary.prototype[\"function\"] = $util.emptyArray;\n        FunctionDefLibrary.prototype.gradient = $util.emptyArray;\n\n        FunctionDefLibrary.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.FunctionDefLibrary();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        if (!(m[\"function\"] && m[\"function\"].length)) m[\"function\"] = [];\n                        m[\"function\"].push($root.tensorflow.FunctionDef.decode(r, r.uint32()));\n                        break;\n                    case 2:\n                        if (!(m.gradient && m.gradient.length)) m.gradient = [];\n                        m.gradient.push($root.tensorflow.GradientDef.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return FunctionDefLibrary;\n    }();\n\n    tensorflow.FunctionDef = function () {\n\n        function FunctionDef(p) {\n            this.attr = {};\n            this.nodeDef = [];\n            this.ret = {};\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        FunctionDef.prototype.signature = null;\n        FunctionDef.prototype.attr = $util.emptyObject;\n        FunctionDef.prototype.nodeDef = $util.emptyArray;\n        FunctionDef.prototype.ret = $util.emptyObject;\n\n        FunctionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.FunctionDef(),\n                k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.signature = $root.tensorflow.OpDef.decode(r, r.uint32());\n                        break;\n                    case 5:\n                        r.skip().pos++;\n                        if (m.attr === $util.emptyObject) m.attr = {};\n                        k = r.string();\n                        r.pos++;\n                        m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                        break;\n                    case 3:\n                        if (!(m.nodeDef && m.nodeDef.length)) m.nodeDef = [];\n                        m.nodeDef.push($root.tensorflow.NodeDef.decode(r, r.uint32()));\n                        break;\n                    case 4:\n                        r.skip().pos++;\n                        if (m.ret === $util.emptyObject) m.ret = {};\n                        k = r.string();\n                        r.pos++;\n                        m.ret[k] = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return FunctionDef;\n    }();\n\n    tensorflow.GradientDef = function () {\n\n        function GradientDef(p) {\n            if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n        }\n\n        GradientDef.prototype.functionName = \"\";\n        GradientDef.prototype.gradientFunc = \"\";\n\n        GradientDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader)) r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l,\n                m = new $root.tensorflow.GradientDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        m.functionName = r.string();\n                        break;\n                    case 2:\n                        m.gradientFunc = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n\n        return GradientDef;\n    }();\n\n    return tensorflow;\n})();\n\nexports.default = $root;"},"hash":"bf397f677e589b1f096e7751048daeea","cacheData":{"env":{}}}