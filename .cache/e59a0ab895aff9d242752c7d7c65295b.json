{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1528724212618},{"name":"../doc","loc":{"line":7,"column":20}},{"name":"../util","loc":{"line":8,"column":22}},{"name":"./array_ops","loc":{"line":9,"column":25}},{"name":"./binary_ops","loc":{"line":10,"column":26}},{"name":"./operation","loc":{"line":11,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MovingAverageOps = undefined;\n\nvar _doc = require(\"../doc\");\n\nvar _util = require(\"../util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _array_ops = require(\"./array_ops\");\n\nvar _binary_ops = require(\"./binary_ops\");\n\nvar _operation = require(\"./operation\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar MovingAverageOps = function () {\n    function MovingAverageOps() {}\n    MovingAverageOps.movingAverage = function (v, x, decay, step, zeroDebias) {\n        if (zeroDebias === void 0) {\n            zeroDebias = true;\n        }\n        util.assertArgumentsAreTensors({ v: v, x: x }, 'movingAverage');\n        util.assertTypesMatch(v, x);\n        util.assert(util.arraysEqual(v.shape, x.shape), 'Shape mismatch in v and x');\n        var one = _array_ops.ArrayOps.scalar(1);\n        decay = typeof decay === 'number' ? _array_ops.ArrayOps.scalar(decay) : decay;\n        var oneMinusDecay = one.sub(decay);\n        var update = x.sub(v).mul(oneMinusDecay);\n        if (zeroDebias) {\n            util.assert(step != null, 'When using zeroDebias: true, step is required.');\n            step = typeof step === 'number' ? _array_ops.ArrayOps.scalar(step) : step;\n            update = update.div(one.sub(_binary_ops.BinaryOps.pow(decay, step)));\n        }\n        return v.add(update);\n    };\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Moving Average' }), _operation.operation], MovingAverageOps, \"movingAverage\", null);\n    return MovingAverageOps;\n}();\nexports.MovingAverageOps = MovingAverageOps;\n//# sourceMappingURL=moving_average.js.map"},"hash":"d65e25df6d0462cabda3152d658b72d0","cacheData":{"env":{}}}