{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1528724212618},{"name":"@tensorflow/tfjs-core","loc":{"line":12,"column":36}},{"name":"../backend/common","loc":{"line":13,"column":32}},{"name":"../engine/topology","loc":{"line":14,"column":33}},{"name":"../errors","loc":{"line":15,"column":27}},{"name":"../utils/generic_utils","loc":{"line":16,"column":56}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ZeroPadding2D = undefined;\nexports.temporalPadding = temporalPadding;\nexports.spatial2dPadding = spatial2dPadding;\n\nvar _tfjsCore = require('@tensorflow/tfjs-core');\n\nvar tfc = _interopRequireWildcard(_tfjsCore);\n\nvar _common = require('../backend/common');\n\nvar _topology = require('../engine/topology');\n\nvar _errors = require('../errors');\n\nvar _generic_utils = require('../utils/generic_utils');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nfunction temporalPadding(x, padding) {\n    return (0, _tfjsCore.tidy)(function () {\n        if (x.rank !== 3) {\n            throw new _errors.ValueError(\"temporalPadding expects input tensor to be 3-D, but received a \" + (x.rank + \"-D tensor.\"));\n        }\n        if (padding == null) {\n            padding = [1, 1];\n        }\n        if (padding.length !== 2) {\n            throw new _errors.ValueError(\"temporalPadding expects input padding pattern to be a length-2 \" + (\"array, but received a length-\" + padding.length + \" array.\"));\n        }\n        var pattern = [[0, 0], padding, [0, 0]];\n        return tfc.pad(x, pattern);\n    });\n}\nfunction spatial2dPadding(x, padding, dataFormat) {\n    return (0, _tfjsCore.tidy)(function () {\n        if (x.rank !== 4) {\n            throw new _errors.ValueError(\"temporalPadding expects input tensor to be 4-D, but received a \" + (x.rank + \"-D tensor.\"));\n        }\n        if (padding == null) {\n            padding = [[1, 1], [1, 1]];\n        }\n        if (padding.length !== 2 || padding[0].length !== 2 || padding[1].length !== 2) {\n            throw new _errors.ValueError('spatial2dPadding expects `padding` to be an Array of two Arrays, ' + 'each of which is an Array of two integers.');\n        }\n        if (dataFormat == null) {\n            dataFormat = (0, _common.imageDataFormat)();\n        }\n        if (dataFormat !== 'channelsLast' && dataFormat !== 'channelsFirst') {\n            throw new _errors.ValueError(\"Unknown data format: \" + dataFormat + \". \" + \"Supported data formats are 'channelsLast' and 'channelsFirst.\");\n        }\n        var pattern;\n        if (dataFormat === 'channelsFirst') {\n            pattern = [[0, 0], [0, 0], padding[0], padding[1]];\n        } else {\n            pattern = [[0, 0], padding[0], padding[1], [0, 0]];\n        }\n        return tfc.pad(x, pattern);\n    });\n}\nvar ZeroPadding2D = function (_super) {\n    __extends(ZeroPadding2D, _super);\n    function ZeroPadding2D(config) {\n        var _this = this;\n        if (config == null) {\n            config = {};\n        }\n        _this = _super.call(this, config) || this;\n        _this.dataFormat = config.dataFormat == null ? (0, _common.imageDataFormat)() : config.dataFormat;\n        if (config.padding == null) {\n            _this.padding = [[1, 1], [1, 1]];\n        } else if (typeof config.padding === 'number') {\n            _this.padding = [[config.padding, config.padding], [config.padding, config.padding]];\n        } else {\n            config.padding = config.padding;\n            if (config.padding.length !== 2) {\n                throw new _errors.ValueError(\"ZeroPadding2D expects padding to be a length-2 array, but \" + (\"received a length-\" + config.padding.length + \" array.\"));\n            }\n            var heightPadding = void 0;\n            var widthPadding = void 0;\n            if (typeof config.padding[0] === 'number') {\n                heightPadding = [config.padding[0], config.padding[0]];\n                widthPadding = [config.padding[1], config.padding[1]];\n            } else {\n                config.padding = config.padding;\n                if (config.padding[0].length !== 2) {\n                    throw new _errors.ValueError(\"ZeroPadding2D expects height padding to be a length-2 array, \" + (\"but received a length-\" + config.padding[0].length + \" array.\"));\n                }\n                heightPadding = config.padding[0];\n                if (config.padding[1].length !== 2) {\n                    throw new _errors.ValueError(\"ZeroPadding2D expects width padding to be a length-2 array, \" + (\"but received a length-\" + config.padding[1].length + \" array.\"));\n                }\n                widthPadding = config.padding[1];\n            }\n            _this.padding = [heightPadding, widthPadding];\n        }\n        _this.inputSpec = [new _topology.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    ZeroPadding2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = (0, _generic_utils.getExactlyOneShape)(inputShape);\n        var rows;\n        var cols;\n        if (this.dataFormat === 'channelsFirst') {\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                rows = inputShape[2] + this.padding[0][0] + this.padding[0][1];\n            } else {\n                rows = null;\n            }\n            if (inputShape[3] != null && inputShape[3] >= 0) {\n                cols = inputShape[3] + this.padding[1][0] + this.padding[1][1];\n            } else {\n                cols = null;\n            }\n            return [inputShape[0], inputShape[1], rows, cols];\n        } else {\n            if (inputShape[1] != null && inputShape[1] >= 0) {\n                rows = inputShape[1] + this.padding[0][0] + this.padding[0][1];\n            } else {\n                rows = null;\n            }\n            if (inputShape[2] != null && inputShape[2] >= 0) {\n                cols = inputShape[2] + this.padding[1][0] + this.padding[1][1];\n            } else {\n                cols = null;\n            }\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    };\n    ZeroPadding2D.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return (0, _tfjsCore.tidy)(function () {\n            return spatial2dPadding((0, _generic_utils.getExactlyOneTensor)(inputs), _this.padding, _this.dataFormat);\n        });\n    };\n    ZeroPadding2D.prototype.getConfig = function () {\n        var config = {\n            padding: this.padding,\n            dataFormat: this.dataFormat\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    ZeroPadding2D.className = 'ZeroPadding2D';\n    return ZeroPadding2D;\n}(_topology.Layer);\nexports.ZeroPadding2D = ZeroPadding2D;\n\n_tfjsCore.serialization.SerializationMap.register(ZeroPadding2D);\n//# sourceMappingURL=padding.js.map"},"hash":"a524a3f63a5bdd3f4f3c468066b88a6f","cacheData":{"env":{}}}