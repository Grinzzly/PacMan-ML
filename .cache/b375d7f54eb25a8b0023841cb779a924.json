{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1528724212618},{"name":"../doc","loc":{"line":7,"column":20}},{"name":"../environment","loc":{"line":8,"column":20}},{"name":"../util","loc":{"line":9,"column":22}},{"name":"./operation","loc":{"line":10,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ImageOps = undefined;\n\nvar _doc = require(\"../doc\");\n\nvar _environment = require(\"../environment\");\n\nvar _util = require(\"../util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _operation = require(\"./operation\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar ImageOps = function () {\n    function ImageOps() {}\n    ImageOps.resizeBilinear = function (images, size, alignCorners) {\n        if (alignCorners === void 0) {\n            alignCorners = false;\n        }\n        util.assertArgumentsAreTensors({ images: images }, 'resizeBilinear');\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeBilinear: x must be rank 3 or 4, but got \" + (\"rank \" + images.rank + \".\"));\n        util.assert(size.length === 2, \"Error in resizeBilinear: new shape must 2D, but got shape \" + (size + \".\"));\n        var batchImages = images;\n        var reshapedTo4D = false;\n        if (images.rank === 3) {\n            reshapedTo4D = true;\n            batchImages = images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\n        }\n        var newHeight = size[0],\n            newWidth = size[1];\n        var forward = function (backend, save) {\n            return backend.resizeBilinear(batchImages, newHeight, newWidth, alignCorners);\n        };\n        var backward = function (dy, saved) {\n            return {\n                batchImages: function () {\n                    return _environment.ENV.engine.runKernel(function (backend) {\n                        return backend.resizeBilinearBackprop(dy, batchImages, alignCorners);\n                    }, {});\n                }\n            };\n        };\n        var res = _environment.ENV.engine.runKernel(forward, { batchImages: batchImages }, backward);\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    ImageOps.resizeNearestNeighbor = function (images, size, alignCorners) {\n        if (alignCorners === void 0) {\n            alignCorners = false;\n        }\n        util.assertArgumentsAreTensors({ images: images }, 'resizeNearestNeighbor');\n        util.assert(images.rank === 3 || images.rank === 4, \"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got \" + (\"rank \" + images.rank + \".\"));\n        util.assert(size.length === 2, \"Error in resizeNearestNeighbor: new shape must 2D, but got shape \" + (size + \".\"));\n        util.assert(images.dtype === 'float32' || images.dtype === 'int32', '`images` must have `int32` or `float32` as dtype');\n        var batchImages = images;\n        var reshapedTo4D = false;\n        if (images.rank === 3) {\n            reshapedTo4D = true;\n            batchImages = images.as4D(1, images.shape[0], images.shape[1], images.shape[2]);\n        }\n        var newHeight = size[0],\n            newWidth = size[1];\n        var res = _environment.ENV.engine.runKernel(function (backend) {\n            return backend.resizeNearestNeighbor(batchImages, newHeight, newWidth, alignCorners);\n        }, { batchImages: batchImages });\n        if (reshapedTo4D) {\n            return res.as3D(res.shape[1], res.shape[2], res.shape[3]);\n        }\n        return res;\n    };\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Images', namespace: 'image' }), _operation.operation], ImageOps, \"resizeBilinear\", null);\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Images', namespace: 'image' }), _operation.operation], ImageOps, \"resizeNearestNeighbor\", null);\n    return ImageOps;\n}();\nexports.ImageOps = ImageOps;\n//# sourceMappingURL=image_ops.js.map"},"hash":"6857a2bd1ebcd6aaef40d5875120649e","cacheData":{"env":{}}}