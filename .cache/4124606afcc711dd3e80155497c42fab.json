{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/.babelrc","includedInParent":true,"mtime":1527958497000},{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"babel-runtime/regenerator"},{"name":"babel-runtime/helpers/asyncToGenerator"},{"name":"@tensorflow/tfjs","loc":{"line":1,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addExampleHandler = exports.getDenseUnits = exports.getEpochs = exports.getBatchSizeFraction = exports.getLearningRate = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar handler = function () {\n  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(label) {\n    var className, button, total;\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            mouseDown = true;\n            className = CONTROLS[label];\n            button = document.getElementById(className);\n            total = document.getElementById(className + '-total');\n\n          case 4:\n            if (!mouseDown) {\n              _context.next = 12;\n              break;\n            }\n\n            addExampleHandler(label);\n            document.body.setAttribute('data-active', CONTROLS[label]);\n            total.innerText = totals[label]++;\n            _context.next = 10;\n            return tf.nextFrame();\n\n          case 10:\n            _context.next = 4;\n            break;\n\n          case 12:\n            document.body.removeAttribute('data-active');\n\n          case 13:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function handler(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.init = init;\nexports.startPacman = startPacman;\nexports.predictClass = predictClass;\nexports.isPredicting = isPredicting;\nexports.donePredicting = donePredicting;\nexports.trainStatus = trainStatus;\nexports.setExampleHandler = setExampleHandler;\nexports.drawThumb = drawThumb;\nexports.draw = draw;\n\nvar _tfjs = require('@tensorflow/tfjs');\n\nvar tf = _interopRequireWildcard(_tfjs);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CONTROLS = ['up', 'down', 'left', 'right'];\nvar CONTROL_CODES = [38, 40, 37, 39];\n\nfunction init() {\n  document.getElementById('controller').style.display = '';\n  statusElement.style.display = 'none';\n}\n\nvar trainStatusElement = document.getElementById('train-status');\n\nvar learningRateElement = document.getElementById('learningRate');\nvar getLearningRate = exports.getLearningRate = function getLearningRate() {\n  return +learningRateElement.value;\n};\n\nvar batchSizeFractionElement = document.getElementById('batchSizeFraction');\nvar getBatchSizeFraction = exports.getBatchSizeFraction = function getBatchSizeFraction() {\n  return +batchSizeFractionElement.value;\n};\n\nvar epochsElement = document.getElementById('epochs');\nvar getEpochs = exports.getEpochs = function getEpochs() {\n  return +epochsElement.value;\n};\n\nvar denseUnitsElement = document.getElementById('dense-units');\nvar getDenseUnits = exports.getDenseUnits = function getDenseUnits() {\n  return +denseUnitsElement.value;\n};\nvar statusElement = document.getElementById('status');\n\nfunction startPacman() {\n  google.pacman.startGameplay();\n}\n\nfunction predictClass(classId) {\n  google.pacman.keyPressed(CONTROL_CODES[classId]);\n  document.body.setAttribute('data-active', CONTROLS[classId]);\n}\n\nfunction isPredicting() {\n  statusElement.style.visibility = 'visible';\n}\nfunction donePredicting() {\n  statusElement.style.visibility = 'hidden';\n}\nfunction trainStatus(status) {\n  trainStatusElement.innerText = status;\n}\n\nvar addExampleHandler = exports.addExampleHandler = void 0;\nfunction setExampleHandler(handler) {\n  exports.addExampleHandler = addExampleHandler = handler;\n}\nvar mouseDown = false;\nvar totals = [0, 0, 0, 0];\n\nvar upButton = document.getElementById('up');\nvar downButton = document.getElementById('down');\nvar leftButton = document.getElementById('left');\nvar rightButton = document.getElementById('right');\n\nvar thumbDisplayed = {};\n\nupButton.addEventListener('mousedown', function () {\n  return handler(0);\n});\nupButton.addEventListener('mouseup', function () {\n  return mouseDown = false;\n});\n\ndownButton.addEventListener('mousedown', function () {\n  return handler(1);\n});\ndownButton.addEventListener('mouseup', function () {\n  return mouseDown = false;\n});\n\nleftButton.addEventListener('mousedown', function () {\n  return handler(2);\n});\nleftButton.addEventListener('mouseup', function () {\n  return mouseDown = false;\n});\n\nrightButton.addEventListener('mousedown', function () {\n  return handler(3);\n});\nrightButton.addEventListener('mouseup', function () {\n  return mouseDown = false;\n});\n\nfunction drawThumb(img, label) {\n  if (thumbDisplayed[label] == null) {\n    var thumbCanvas = document.getElementById(CONTROLS[label] + '-thumb');\n    draw(img, thumbCanvas);\n  }\n}\n\nfunction draw(image, canvas) {\n  var width = 224,\n      height = 224;\n\n  var ctx = canvas.getContext('2d');\n  var imageData = new ImageData(width, height);\n  var data = image.dataSync();\n  for (var i = 0; i < height * width; ++i) {\n    var j = i * 4;\n    imageData.data[j + 0] = (data[i * 3 + 0] + 1) * 127;\n    imageData.data[j + 1] = (data[i * 3 + 1] + 1) * 127;\n    imageData.data[j + 2] = (data[i * 3 + 2] + 1) * 127;\n    imageData.data[j + 3] = 255;\n  }\n  ctx.putImageData(imageData, 0, 0);\n}"},"hash":"10655c42e73edf93152d6715118d9a6d","cacheData":{"env":{}}}