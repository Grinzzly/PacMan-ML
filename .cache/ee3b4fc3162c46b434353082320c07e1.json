{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1528724212618},{"name":"../doc","loc":{"line":7,"column":20}},{"name":"../environment","loc":{"line":8,"column":20}},{"name":"../types","loc":{"line":9,"column":23}},{"name":"../util","loc":{"line":10,"column":22}},{"name":"./broadcast_util","loc":{"line":11,"column":32}},{"name":"./operation","loc":{"line":12,"column":26}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.LogicalOps = undefined;\n\nvar _doc = require(\"../doc\");\n\nvar _environment = require(\"../environment\");\n\nvar _types = require(\"../types\");\n\nvar types = _interopRequireWildcard(_types);\n\nvar _util = require(\"../util\");\n\nvar util = _interopRequireWildcard(_util);\n\nvar _broadcast_util = require(\"./broadcast_util\");\n\nvar broadcast_util = _interopRequireWildcard(_broadcast_util);\n\nvar _operation = require(\"./operation\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar LogicalOps = function () {\n    function LogicalOps() {}\n    LogicalOps.logicalNot = function (x) {\n        util.assertArgumentsAreTensors({ x: x }, 'logicalNot');\n        util.assert(x.dtype === 'bool', 'Error Array must be of type bool.');\n        return _environment.ENV.engine.runKernel(function (backend) {\n            return backend.logicalNot(x);\n        }, { x: x });\n    };\n    LogicalOps.logicalAnd = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalAnd');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return _environment.ENV.engine.runKernel(function (backend) {\n            return backend.logicalAnd(a, b);\n        }, { a: a, b: b });\n    };\n    LogicalOps.logicalOr = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalOr');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return _environment.ENV.engine.runKernel(function (backend) {\n            return backend.logicalOr(a, b);\n        }, { a: a, b: b });\n    };\n    LogicalOps.logicalXor = function (a, b) {\n        util.assertArgumentsAreTensors({ a: a, b: b }, 'logicalXor');\n        util.assert(a.dtype === 'bool' && b.dtype === 'bool', 'Error Array must be of type bool.');\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        return LogicalOps.logicalOr(a, b).logicalAnd(LogicalOps.logicalAnd(a, b).logicalNot());\n    };\n    LogicalOps.where = function (condition, a, b) {\n        util.assertArgumentsAreTensors({ condition: condition, a: a, b: b }, 'where');\n        util.assert(condition.dtype === 'bool', 'Error Condition must be of type bool.');\n        util.assertShapesMatch(a.shape, b.shape, 'Error in where: ');\n        if (condition.rank === 1) {\n            util.assert(condition.shape[0] === a.shape[0], 'The first dimension of `a` must match the size of `condition`.');\n        } else {\n            util.assertShapesMatch(condition.shape, b.shape, 'Error in where: ');\n        }\n        var dtype = types.upcastType(a.dtype, b.dtype);\n        return _environment.ENV.engine.runKernel(function (backend) {\n            return backend.where(condition, a, b, dtype);\n        }, { condition: condition, a: a, b: b });\n    };\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Logical' }), _operation.operation], LogicalOps, \"logicalNot\", null);\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Logical' }), _operation.operation], LogicalOps, \"logicalAnd\", null);\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Logical' }), _operation.operation], LogicalOps, \"logicalOr\", null);\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Logical' }), _operation.operation], LogicalOps, \"logicalXor\", null);\n    __decorate([(0, _doc.doc)({ heading: 'Operations', subheading: 'Logical' }), _operation.operation], LogicalOps, \"where\", null);\n    return LogicalOps;\n}();\nexports.LogicalOps = LogicalOps;\n//# sourceMappingURL=logical_ops.js.map"},"hash":"09033e9fc24f1c8fd94ced2c630ffc85","cacheData":{"env":{}}}