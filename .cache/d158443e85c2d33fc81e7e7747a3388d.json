{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1528724212618},{"name":"@tensorflow/tfjs-core","loc":{"line":7,"column":20}},{"name":"./common","loc":{"line":8,"column":57}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SymbolicTensor = undefined;\nexports.getNextUniqueTensorId = getNextUniqueTensorId;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\nvar _common = require(\"./common\");\n\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n    var c = arguments.length,\n        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n        d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar _nextUniqueTensorId = 0;\nfunction getNextUniqueTensorId() {\n    return _nextUniqueTensorId++;\n}\nvar SymbolicTensor = function () {\n    function SymbolicTensor(dtype, shape, sourceLayer, inputs, callArgs, name, outputTensorIndex) {\n        this.dtype = dtype;\n        this.shape = shape;\n        this.sourceLayer = sourceLayer;\n        this.inputs = inputs;\n        this.callArgs = callArgs;\n        this.outputTensorIndex = outputTensorIndex;\n        this.id = getNextUniqueTensorId();\n        if (name != null) {\n            this.originalName = (0, _common.getScopedTensorName)(name);\n            this.name = (0, _common.getUniqueTensorName)(this.originalName);\n        }\n        this.rank = shape.length;\n    }\n    SymbolicTensor = __decorate([(0, _tfjsCore.doc)({ heading: 'Models', 'subheading': 'Classes' })], SymbolicTensor);\n    return SymbolicTensor;\n}();\nexports.SymbolicTensor = SymbolicTensor;\n//# sourceMappingURL=types.js.map"},"hash":"8bd6ba88ec9da56352d1c3b5f532bda6","cacheData":{"env":{}}}