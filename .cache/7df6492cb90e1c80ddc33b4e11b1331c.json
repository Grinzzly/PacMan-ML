{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1528724212618},{"name":"@tensorflow/tfjs-core","loc":{"line":12,"column":36}},{"name":"../backend/common","loc":{"line":13,"column":32}},{"name":"../backend/tfjs_backend","loc":{"line":14,"column":19}},{"name":"../common","loc":{"line":15,"column":65}},{"name":"../engine/topology","loc":{"line":17,"column":22}},{"name":"../errors","loc":{"line":18,"column":48}},{"name":"../utils/conv_utils","loc":{"line":19,"column":33}},{"name":"../utils/generic_utils","loc":{"line":20,"column":31}},{"name":"./convolutional","loc":{"line":21,"column":38}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.GlobalMaxPooling2D = exports.GlobalAveragePooling2D = exports.GlobalPooling2D = exports.GlobalMaxPooling1D = exports.GlobalAveragePooling1D = exports.GlobalPooling1D = exports.AveragePooling2D = exports.MaxPooling2D = exports.Pooling2D = exports.AveragePooling1D = exports.MaxPooling1D = exports.Pooling1D = undefined;\nexports.pool2d = pool2d;\n\nvar _tfjsCore = require('@tensorflow/tfjs-core');\n\nvar tfc = _interopRequireWildcard(_tfjsCore);\n\nvar _common = require('../backend/common');\n\nvar _tfjs_backend = require('../backend/tfjs_backend');\n\nvar K = _interopRequireWildcard(_tfjs_backend);\n\nvar _common2 = require('../common');\n\nvar _topology = require('../engine/topology');\n\nvar _errors = require('../errors');\n\nvar _conv_utils = require('../utils/conv_utils');\n\nvar _generic_utils = require('../utils/generic_utils');\n\nvar generic_utils = _interopRequireWildcard(_generic_utils);\n\nvar _convolutional = require('./convolutional');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n    } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nfunction pool2d(x, poolSize, strides, padding, dataFormat, poolMode) {\n    return (0, _tfjsCore.tidy)(function () {\n        (0, _common2.checkDataFormat)(dataFormat);\n        (0, _common2.checkPoolMode)(poolMode);\n        (0, _common2.checkPaddingMode)(padding);\n        if (strides == null) {\n            strides = [1, 1];\n        }\n        if (padding == null) {\n            padding = 'valid';\n        }\n        if (dataFormat == null) {\n            dataFormat = (0, _common.imageDataFormat)();\n        }\n        if (poolMode == null) {\n            poolMode = 'max';\n        }\n        x = (0, _convolutional.preprocessConv2DInput)(x, dataFormat);\n        var y;\n        var paddingString = padding === 'same' ? 'same' : 'valid';\n        if (poolMode === 'max') {\n            y = tfc.maxPool(x, poolSize, strides, paddingString);\n        } else {\n            y = tfc.avgPool(x, poolSize, strides, paddingString);\n        }\n        if (dataFormat === 'channelsFirst') {\n            y = tfc.transpose(y, [0, 3, 1, 2]);\n        }\n        return y;\n    });\n}\nvar Pooling1D = function (_super) {\n    __extends(Pooling1D, _super);\n    function Pooling1D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = 2;\n        }\n        _this = _super.call(this, config) || this;\n        if (typeof config.poolSize === 'number') {\n            _this.poolSize = [config.poolSize];\n        } else if (Array.isArray(config.poolSize) && config.poolSize.length === 1 && typeof config.poolSize[0] === 'number') {\n            _this.poolSize = config.poolSize;\n        } else {\n            throw new _errors.ValueError(\"poolSize for 1D convolutional layer must be a number or an \" + \"Array of a single number, but received \" + (\"\" + JSON.stringify(config.poolSize)));\n        }\n        if (config.strides == null) {\n            _this.strides = _this.poolSize;\n        } else {\n            if (typeof config.strides === 'number') {\n                _this.strides = [config.strides];\n            } else if (Array.isArray(config.strides) && config.strides.length === 1 && typeof config.strides[0] === 'number') {\n                _this.strides = config.strides;\n            } else {\n                throw new _errors.ValueError(\"strides for 1D convolutional layer must be a number or an \" + \"Array of a single number, but received \" + (\"\" + JSON.stringify(config.strides)));\n            }\n        }\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        (0, _common2.checkPaddingMode)(_this.padding);\n        _this.inputSpec = [new _topology.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    Pooling1D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var length = (0, _conv_utils.convOutputLength)(inputShape[1], this.poolSize[0], this.padding, this.strides[0]);\n        return [inputShape[0], length, inputShape[2]];\n    };\n    Pooling1D.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return (0, _tfjsCore.tidy)(function () {\n            _this.invokeCallHook(inputs, kwargs);\n            inputs = K.expandDims(generic_utils.getExactlyOneTensor(inputs), 2);\n            var output = _this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), [_this.poolSize[0], 1], [_this.strides[0], 1], _this.padding, 'channelsLast');\n            return tfc.squeeze(output, [2]);\n        });\n    };\n    Pooling1D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling1D;\n}(_topology.Layer);\nexports.Pooling1D = Pooling1D;\n\nvar MaxPooling1D = function (_super) {\n    __extends(MaxPooling1D, _super);\n    function MaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        (0, _common2.checkDataFormat)(dataFormat);\n        (0, _common2.checkPaddingMode)(padding);\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    MaxPooling1D.className = 'MaxPooling1D';\n    return MaxPooling1D;\n}(Pooling1D);\nexports.MaxPooling1D = MaxPooling1D;\n\n_tfjsCore.serialization.SerializationMap.register(MaxPooling1D);\nvar AveragePooling1D = function (_super) {\n    __extends(AveragePooling1D, _super);\n    function AveragePooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    AveragePooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        (0, _common2.checkDataFormat)(dataFormat);\n        (0, _common2.checkPaddingMode)(padding);\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    AveragePooling1D.className = 'AveragePooling1D';\n    return AveragePooling1D;\n}(Pooling1D);\nexports.AveragePooling1D = AveragePooling1D;\n\n_tfjsCore.serialization.SerializationMap.register(AveragePooling1D);\nvar Pooling2D = function (_super) {\n    __extends(Pooling2D, _super);\n    function Pooling2D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = [2, 2];\n        }\n        _this = _super.call(this, config) || this;\n        _this.poolSize = Array.isArray(config.poolSize) ? config.poolSize : [config.poolSize, config.poolSize];\n        _this.strides = config.strides == null ? _this.poolSize : config.strides;\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        _this.dataFormat = config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        (0, _common2.checkDataFormat)(_this.dataFormat);\n        (0, _common2.checkPaddingMode)(_this.padding);\n        _this.inputSpec = [new _topology.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    Pooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n        rows = (0, _conv_utils.convOutputLength)(rows, this.poolSize[0], this.padding, this.strides[0]);\n        cols = (0, _conv_utils.convOutputLength)(cols, this.poolSize[1], this.padding, this.strides[1]);\n        if (this.dataFormat === 'channelsFirst') {\n            return [inputShape[0], inputShape[1], rows, cols];\n        } else {\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    };\n    Pooling2D.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return (0, _tfjsCore.tidy)(function () {\n            _this.invokeCallHook(inputs, kwargs);\n            return _this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), _this.poolSize, _this.strides, _this.padding, _this.dataFormat);\n        });\n    };\n    Pooling2D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides,\n            dataFormat: this.dataFormat\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling2D;\n}(_topology.Layer);\nexports.Pooling2D = Pooling2D;\n\nvar MaxPooling2D = function (_super) {\n    __extends(MaxPooling2D, _super);\n    function MaxPooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        (0, _common2.checkDataFormat)(dataFormat);\n        (0, _common2.checkPaddingMode)(padding);\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    MaxPooling2D.className = 'MaxPooling2D';\n    return MaxPooling2D;\n}(Pooling2D);\nexports.MaxPooling2D = MaxPooling2D;\n\n_tfjsCore.serialization.SerializationMap.register(MaxPooling2D);\nvar AveragePooling2D = function (_super) {\n    __extends(AveragePooling2D, _super);\n    function AveragePooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    AveragePooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        (0, _common2.checkDataFormat)(dataFormat);\n        (0, _common2.checkPaddingMode)(padding);\n        return pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    AveragePooling2D.className = 'AveragePooling2D';\n    return AveragePooling2D;\n}(Pooling2D);\nexports.AveragePooling2D = AveragePooling2D;\n\n_tfjsCore.serialization.SerializationMap.register(AveragePooling2D);\nvar GlobalPooling1D = function (_super) {\n    __extends(GlobalPooling1D, _super);\n    function GlobalPooling1D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.inputSpec = [new _topology.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    GlobalPooling1D.prototype.computeOutputShape = function (inputShape) {\n        return [inputShape[0], inputShape[2]];\n    };\n    GlobalPooling1D.prototype.call = function (inputs, kwargs) {\n        throw new _errors.NotImplementedError();\n    };\n    return GlobalPooling1D;\n}(_topology.Layer);\nexports.GlobalPooling1D = GlobalPooling1D;\n\nvar GlobalAveragePooling1D = function (_super) {\n    __extends(GlobalAveragePooling1D, _super);\n    function GlobalAveragePooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalAveragePooling1D.prototype.call = function (inputs, kwargs) {\n        return (0, _tfjsCore.tidy)(function () {\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            return tfc.mean(input, 1);\n        });\n    };\n    GlobalAveragePooling1D.className = 'GlobalAveragePooling1D';\n    return GlobalAveragePooling1D;\n}(GlobalPooling1D);\nexports.GlobalAveragePooling1D = GlobalAveragePooling1D;\n\n_tfjsCore.serialization.SerializationMap.register(GlobalAveragePooling1D);\nvar GlobalMaxPooling1D = function (_super) {\n    __extends(GlobalMaxPooling1D, _super);\n    function GlobalMaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalMaxPooling1D.prototype.call = function (inputs, kwargs) {\n        return (0, _tfjsCore.tidy)(function () {\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            return tfc.max(input, 1);\n        });\n    };\n    GlobalMaxPooling1D.className = 'GlobalMaxPooling1D';\n    return GlobalMaxPooling1D;\n}(GlobalPooling1D);\nexports.GlobalMaxPooling1D = GlobalMaxPooling1D;\n\n_tfjsCore.serialization.SerializationMap.register(GlobalMaxPooling1D);\nvar GlobalPooling2D = function (_super) {\n    __extends(GlobalPooling2D, _super);\n    function GlobalPooling2D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.dataFormat = config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        (0, _common2.checkDataFormat)(_this.dataFormat);\n        _this.inputSpec = [new _topology.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    GlobalPooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = inputShape;\n        if (this.dataFormat === 'channelsLast') {\n            return [inputShape[0], inputShape[3]];\n        } else {\n            return [inputShape[0], inputShape[1]];\n        }\n    };\n    GlobalPooling2D.prototype.call = function (inputs, kwargs) {\n        throw new _errors.NotImplementedError();\n    };\n    GlobalPooling2D.prototype.getConfig = function () {\n        var config = { dataFormat: this.dataFormat };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return GlobalPooling2D;\n}(_topology.Layer);\nexports.GlobalPooling2D = GlobalPooling2D;\n\nvar GlobalAveragePooling2D = function (_super) {\n    __extends(GlobalAveragePooling2D, _super);\n    function GlobalAveragePooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalAveragePooling2D.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return (0, _tfjsCore.tidy)(function () {\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            if (_this.dataFormat === 'channelsLast') {\n                return tfc.mean(input, [1, 2]);\n            } else {\n                return tfc.mean(input, [2, 3]);\n            }\n        });\n    };\n    GlobalAveragePooling2D.className = 'GlobalAveragePooling2D';\n    return GlobalAveragePooling2D;\n}(GlobalPooling2D);\nexports.GlobalAveragePooling2D = GlobalAveragePooling2D;\n\n_tfjsCore.serialization.SerializationMap.register(GlobalAveragePooling2D);\nvar GlobalMaxPooling2D = function (_super) {\n    __extends(GlobalMaxPooling2D, _super);\n    function GlobalMaxPooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalMaxPooling2D.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        return (0, _tfjsCore.tidy)(function () {\n            var input = generic_utils.getExactlyOneTensor(inputs);\n            if (_this.dataFormat === 'channelsLast') {\n                return tfc.max(input, [1, 2]);\n            } else {\n                return tfc.max(input, [2, 3]);\n            }\n        });\n    };\n    GlobalMaxPooling2D.className = 'GlobalMaxPooling2D';\n    return GlobalMaxPooling2D;\n}(GlobalPooling2D);\nexports.GlobalMaxPooling2D = GlobalMaxPooling2D;\n\n_tfjsCore.serialization.SerializationMap.register(GlobalMaxPooling2D);\n//# sourceMappingURL=pooling.js.map"},"hash":"a236eba71e0c879de4f90ad949f4b8dd","cacheData":{"env":{}}}