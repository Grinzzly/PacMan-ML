{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1528724212618},{"name":"../ops/array_ops","loc":{"line":36,"column":25}},{"name":"../util","loc":{"line":37,"column":30}},{"name":"./types","loc":{"line":38,"column":37}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.encodeWeights = encodeWeights;\nexports.decodeWeights = decodeWeights;\nexports.concatenateTypedArrays = concatenateTypedArrays;\nexports.stringByteLength = stringByteLength;\nexports.arrayBufferToBase64String = arrayBufferToBase64String;\nexports.base64StringToArrayBuffer = base64StringToArrayBuffer;\nexports.concatenateArrayBuffers = concatenateArrayBuffers;\nexports.basename = basename;\nexports.getModelArtifactsInfoForJSON = getModelArtifactsInfoForJSON;\n\nvar _array_ops = require(\"../ops/array_ops\");\n\nvar _util = require(\"../util\");\n\nvar _types = require(\"./types\");\n\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = undefined && undefined.__generator || function (thisArg, body) {\n    var _ = { label: 0, sent: function () {\n            if (t[0] & 1) throw t[1];return t[1];\n        }, trys: [], ops: [] },\n        f,\n        y,\n        t,\n        g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n        return this;\n    }), g;\n    function verb(n) {\n        return function (v) {\n            return step([n, v]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0:case 1:\n                    t = op;break;\n                case 4:\n                    _.label++;return { value: op[1], done: false };\n                case 5:\n                    _.label++;y = op[1];op = [0];continue;\n                case 7:\n                    op = _.ops.pop();_.trys.pop();continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];t = op;break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];_.ops.push(op);break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [6, e];y = 0;\n        } finally {\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction encodeWeights(tensors) {\n    return __awaiter(this, void 0, void 0, function () {\n        var specs, dataPromises, name_1, t, tensorValues;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    specs = [];\n                    dataPromises = [];\n                    for (name_1 in tensors) {\n                        t = tensors[name_1];\n                        if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool') {\n                            throw new Error(\"Unsupported dtype in weight '\" + name_1 + \"': \" + t.dtype);\n                        }\n                        specs.push({ name: name_1, shape: t.shape, dtype: t.dtype });\n                        dataPromises.push(t.data());\n                    }\n                    return [4, Promise.all(dataPromises)];\n                case 1:\n                    tensorValues = _a.sent();\n                    return [2, { data: concatenateTypedArrays(tensorValues), specs: specs }];\n            }\n        });\n    });\n}\nfunction decodeWeights(buffer, specs) {\n    var out = {};\n    var offset = 0;\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        var name_2 = spec.name;\n        var dtype = spec.dtype;\n        var shape = spec.shape;\n        if (spec.quantization != null) {\n            throw new Error(\"decodeWeights does not support quantization yet, but encountered \" + (\"weight '\" + name_2 + \" with quantization.'\"));\n        }\n        var size = (0, _util.sizeFromShape)(shape);\n        var value = void 0;\n        if (dtype === 'float32') {\n            value = _array_ops.ArrayOps.tensor(new Float32Array(buffer, offset, size), shape, 'float32');\n        } else if (dtype === 'int32') {\n            value = _array_ops.ArrayOps.tensor(new Int32Array(buffer, offset, size), shape, 'int32');\n        } else if (dtype === 'bool') {\n            value = _array_ops.ArrayOps.tensor(new Uint8Array(buffer, offset, size), shape, 'bool');\n        } else {\n            throw new Error(\"Unsupported dtype in weight '\" + name_2 + \"': \" + dtype);\n        }\n        out[name_2] = value;\n        offset += size * _types.DTYPE_VALUE_SIZE_MAP[dtype];\n    }\n    return out;\n}\nfunction concatenateTypedArrays(xs) {\n    if (xs === null) {\n        throw new Error(\"Invalid input value: \" + JSON.stringify(xs));\n    }\n    var totalByteLength = 0;\n    xs.forEach(function (x) {\n        if (x instanceof Float32Array || x instanceof Int32Array) {\n            totalByteLength += x.length * 4;\n        } else if (x instanceof Uint8Array) {\n            totalByteLength += x.length;\n        } else {\n            throw new Error(\"Unsupported TypedArray subtype: \" + x.constructor.name);\n        }\n    });\n    var y = new Uint8Array(totalByteLength);\n    var offset = 0;\n    xs.forEach(function (x) {\n        y.set(new Uint8Array(x.buffer), offset);\n        if (x instanceof Float32Array || x instanceof Int32Array) {\n            offset += x.length * 4;\n        } else {\n            offset += x.length;\n        }\n    });\n    return y.buffer;\n}\nfunction stringByteLength(str) {\n    return new Blob([str]).size;\n}\nfunction arrayBufferToBase64String(buffer) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)));\n}\nfunction base64StringToArrayBuffer(str) {\n    var s = atob(str);\n    var buffer = new Uint8Array(s.length);\n    for (var i = 0; i < s.length; ++i) {\n        buffer.set([s.charCodeAt(i)], i);\n    }\n    return buffer.buffer;\n}\nfunction concatenateArrayBuffers(buffers) {\n    var totalByteLength = 0;\n    buffers.forEach(function (buffer) {\n        totalByteLength += buffer.byteLength;\n    });\n    var temp = new Uint8Array(totalByteLength);\n    var offset = 0;\n    buffers.forEach(function (buffer) {\n        temp.set(new Uint8Array(buffer), offset);\n        offset += buffer.byteLength;\n    });\n    return temp.buffer;\n}\nfunction basename(path) {\n    var SEPARATOR = '/';\n    path = path.trim();\n    while (path.endsWith(SEPARATOR)) {\n        path = path.slice(0, path.length - 1);\n    }\n    var items = path.split(SEPARATOR);\n    return items[items.length - 1];\n}\nfunction getModelArtifactsInfoForJSON(modelArtifacts) {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n        throw new Error('Expected JSON model topology, received ArrayBuffer.');\n    }\n    return {\n        dateSaved: new Date(),\n        modelTopologyType: 'JSON',\n        modelTopologyBytes: modelArtifacts.modelTopology == null ? 0 : stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n        weightSpecsBytes: modelArtifacts.weightSpecs == null ? 0 : stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n        weightDataBytes: modelArtifacts.weightData == null ? 0 : modelArtifacts.weightData.byteLength\n    };\n}\n//# sourceMappingURL=io_utils.js.map"},"hash":"b8e18fda916d722f3e04c5188648c344","cacheData":{"env":{}}}