{"dependencies":[{"name":"/home/szamulko/Desktop/Projects/PacMan/package.json","includedInParent":true,"mtime":1528724217926},{"name":"/home/szamulko/Desktop/Projects/PacMan/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1528724212618},{"name":"./shader_compiler","loc":{"line":1,"column":34}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.SliceProgram = undefined;\n\nvar _shader_compiler = require('./shader_compiler');\n\nvar SliceProgram = function () {\n    function SliceProgram(destSize) {\n        this.variableNames = ['source'];\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        var dtype = (0, _shader_compiler.getCoordsDataType)(this.rank);\n        var sourceCoords = getCoords(this.rank);\n        this.userCode = \"\\n      uniform \" + dtype + \" start;\\n\\n      void main() {\\n        \" + dtype + \" sourceLoc = start + getOutputCoords();\\n        setOutput(getSource(\" + sourceCoords + \"));\\n      }\\n    \";\n    }\n    SliceProgram.prototype.getCustomSetupFunc = function (start) {\n        var _this = this;\n        if (start.length !== this.rank) {\n            throw Error(\"The rank (\" + this.rank + \") of the program must match the \" + (\"length of start (\" + start.length + \")\"));\n        }\n        return function (gpgpu, webGLProgram) {\n            if (_this.startLoc == null) {\n                _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (_this.startLoc == null) {\n                    return;\n                }\n            }\n            if (_this.rank === 1) {\n                gpgpu.gl.uniform1i(_this.startLoc, start[0]);\n            } else if (_this.rank === 2) {\n                gpgpu.gl.uniform2i(_this.startLoc, start[0], start[1]);\n            } else if (_this.rank === 3) {\n                gpgpu.gl.uniform3i(_this.startLoc, start[0], start[1], start[2]);\n            } else if (_this.rank === 4) {\n                gpgpu.gl.uniform4i(_this.startLoc, start[0], start[1], start[2], start[3]);\n            } else {\n                throw Error(\"Slicing for rank \" + _this.rank + \" is not yet supported\");\n            }\n        };\n    };\n    return SliceProgram;\n}();\nexports.SliceProgram = SliceProgram;\n\nfunction getCoords(rank) {\n    if (rank === 1) {\n        return 'sourceLoc';\n    } else if (rank === 2) {\n        return 'sourceLoc.x, sourceLoc.y';\n    } else if (rank === 3) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z';\n    } else if (rank === 4) {\n        return 'sourceLoc.x, sourceLoc.y, sourceLoc.z, sourceLoc.w';\n    } else {\n        throw Error(\"Slicing for rank \" + rank + \" is not yet supported\");\n    }\n}\n//# sourceMappingURL=slice_gpu.js.map"},"hash":"1c5926548a191cfc0cc037ddc4610e5c","cacheData":{"env":{}}}